Index: ipc.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nipc.py – Interprozesskommunikation für das Chatprogramm\r\nBeschreibung: Modul zur Kommunikation zwischen Prozessen über multiprocessing.Queue\r\n\"\"\"\r\n\r\nfrom multiprocessing import Process, Queue\r\nimport time\r\n\r\ndef sender(queue: Queue):\r\n    \"\"\"\r\n    Sendet Nachrichten in die Queue.\r\n    \"\"\"\r\n    for i in range(5):\r\n        msg = f\"Nachricht {i}\"\r\n        print(f\"[Sender] Sende: {msg}\")\r\n        queue.put(msg)\r\n        time.sleep(1)\r\n    queue.put(None)  # Signal zum Beenden\r\n\r\ndef receiver(queue: Queue):\r\n    \"\"\"\r\n    Empfängt Nachrichten aus der Queue.\r\n    \"\"\"\r\n    while True:\r\n        msg = queue.get()\r\n        if msg is None:\r\n            print(\"[Empfänger] Beende...\")\r\n            break\r\n        print(f\"[Empfänger] Empfange: {msg}\")\r\n\r\nif __name__ == \"__main__\":\r\n    q = Queue()\r\n    p1 = Process(target=sender, args=(q,))\r\n    p2 = Process(target=receiver, args=(q,))\r\n\r\n    p1.start()\r\n    p2.start()\r\n    p1.join()\r\n    p2.join()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ipc.py b/ipc.py
--- a/ipc.py	(revision 4df12be1596185983ef63cb3dc0e0352b6672d83)
+++ b/ipc.py	(date 1748193157737)
@@ -1,39 +1,0 @@
-"""
-ipc.py – Interprozesskommunikation für das Chatprogramm
-Beschreibung: Modul zur Kommunikation zwischen Prozessen über multiprocessing.Queue
-"""
-
-from multiprocessing import Process, Queue
-import time
-
-def sender(queue: Queue):
-    """
-    Sendet Nachrichten in die Queue.
-    """
-    for i in range(5):
-        msg = f"Nachricht {i}"
-        print(f"[Sender] Sende: {msg}")
-        queue.put(msg)
-        time.sleep(1)
-    queue.put(None)  # Signal zum Beenden
-
-def receiver(queue: Queue):
-    """
-    Empfängt Nachrichten aus der Queue.
-    """
-    while True:
-        msg = queue.get()
-        if msg is None:
-            print("[Empfänger] Beende...")
-            break
-        print(f"[Empfänger] Empfange: {msg}")
-
-if __name__ == "__main__":
-    q = Queue()
-    p1 = Process(target=sender, args=(q,))
-    p2 = Process(target=receiver, args=(q,))
-
-    p1.start()
-    p2.start()
-    p1.join()
-    p2.join()
